{"version":3,"sources":["services/JackpotSvc.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAMA;gBAAA;gBAqCA,CAAC;gBAlCU,oCAAe,GAAtB;oBACI,MAAM,CAAC,IAAI,OAAO,CAAyB,UAAA,OAAO;wBAC9C,OAAA,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,gCAAY,CAAC,EAArB,CAAqB,EAAE,GAAG,CAAC;oBAA5C,CAA4C,CAAC,cAAc;oBAAf,CAAC,cAAc;qBAC9D,CAAC;gBACN,CAAC;gBACM,sCAAiB,GAAxB;oBACI,MAAM,CAAC,IAAI,OAAO,CAAyB,UAAA,OAAO;wBAC9C,OAAA,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,0CAAsB,CAAC,EAA/B,CAA+B,EAAE,IAAI,CAAC;oBAAvD,CAAuD,CAAC,YAAY;oBAAb,CAAC,YAAY;qBACvE,CAAC;gBACN,CAAC;gBAEM,kCAAa,GAApB;oBACI,MAAM,CAAC,IAAI,OAAO,CAAyB,UAAA,OAAO;wBAC9C,OAAA,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,8BAAU,CAAC,EAAnB,CAAmB,EAAE,GAAG,CAAC;oBAA1C,CAA0C,CAAC,cAAc;oBAAf,CAAC,cAAc;qBAC5D,CAAC;gBACN,CAAC;gBAEM,mCAAc,GAArB;oBACI,MAAM,CAAC,IAAI,OAAO,CAAuB,UAAA,OAAO;wBAC5C,OAAA,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,+BAAW,CAAC,EAApB,CAAoB,EAAE,GAAG,CAAC;oBAA3C,CAA2C,CAAC,cAAc;oBAAf,CAAC,cAAc;qBAC7D,CAAC;gBACN,CAAC;gBAEM,qCAAgB,GAAvB;oBACI,MAAM,CAAC,IAAI,OAAO,CAAyB,UAAA,OAAO;wBAC9C,OAAA,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,iCAAa,CAAC,EAAtB,CAAsB,EAAE,GAAG,CAAC;oBAA7C,CAA6C,CAAC,cAAc;oBAAf,CAAC,cAAc;qBAC/D,CAAC;gBACN,CAAC;gBAEM,oCAAe,GAAtB;oBACI,MAAM,CAAC,IAAI,OAAO,CAAyB,UAAA,OAAO;wBAC9C,OAAA,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,gCAAY,CAAC,EAArB,CAAqB,EAAE,GAAG,CAAC;oBAA5C,CAA4C,CAAC,cAAc;oBAAf,CAAC,cAAc;qBAC9D,CAAC;gBACN,CAAC;gBAtCL;oBAAC,iBAAU,EAAE;;8BAAA;gBAuCb,iBAAC;YAAD,CArCA,AAqCC,IAAA;YArCD,mCAqCC,CAAA","file":"services/JackpotSvc.js","sourcesContent":["import { Injectable} from \"@angular/core\";\r\nimport {jackpotUserInterface, jackpotInfoInterface, jackpotStakesInterface } from '../../app/classes/jackpotUserInterface';\r\nimport {jackpotUsers, jackpotPreviuosActions, winnerInfo, jackpotInfo, lowStakeInfo, highStakeInfo } from '../../app/mocks/jackpot-user-mock';\r\n\r\n@Injectable()\r\n\r\nexport class JackpotSvc {\r\n\r\n\r\n    public getJackpotUsers(): Promise<jackpotUserInterface[]> {\r\n        return new Promise<jackpotUserInterface[]>(resolve =>\r\n            setTimeout(() => resolve(jackpotUsers), 500) // 0.5 seconds\r\n        );\r\n    }\r\n    public getPreviousAction(): Promise<jackpotUserInterface[]> {\r\n        return new Promise<jackpotUserInterface[]>(resolve =>\r\n            setTimeout(() => resolve(jackpotPreviuosActions), 1000) // 1 seconds\r\n        );\r\n    }\r\n\r\n    public getWinnerInfo(): Promise<jackpotUserInterface[]> {\r\n        return new Promise<jackpotUserInterface[]>(resolve =>\r\n            setTimeout(() => resolve(winnerInfo), 100) // 0.1 seconds\r\n        );\r\n    }\r\n\r\n    public getjackPotInfo(): Promise<jackpotInfoInterface> {\r\n        return new Promise<jackpotInfoInterface>(resolve =>\r\n            setTimeout(() => resolve(jackpotInfo), 200) // 0.1 seconds\r\n        );\r\n    }\r\n\r\n    public getHighStakeInfo(): Promise<jackpotStakesInterface> {\r\n        return new Promise<jackpotStakesInterface>(resolve =>\r\n            setTimeout(() => resolve(highStakeInfo), 300) // 0.1 seconds\r\n        );\r\n    }\r\n\r\n    public getLowStakeInfo(): Promise<jackpotStakesInterface> {\r\n        return new Promise<jackpotStakesInterface>(resolve =>\r\n            setTimeout(() => resolve(lowStakeInfo), 300) // 0.1 seconds\r\n        );\r\n    }\r\n}"],"sourceRoot":"/source/"}